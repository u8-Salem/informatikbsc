

1. 
rm entfernt standardmäßig keine Ordner, kann aber mit den Flags -r auch Ordner entfernen oder mit der Flag -d nur leere Ordner löschen.
rmdir entfernt NUR leere Ordner, ist daher also sicherer zu benutzen, wenn man wirklich nur leere Ordner löschen möchte und nicht ausversehen irgendwelche Daten mitlöschen möchte. 
rm -d verhält sich zwar genau wie rmdir, wenn man statt dem -d allerdings ein -r schreibt besteht wieder Gefahr.
KORREKTUR: _Was verhindert einen Ordner mit dem normalen `rm` zu löschen?_ Hint: linkcounter des Ordners (-0.25P)


2. 
FAT: Daten werden in Blöcken gespeichert, welche wie eine Verkettete Liste zusammenhängen (Jeder Block enthält info auf den nächsten)
Um die Fehleranfälligkeit zu vermindern muss der FAT allerdings mehrfach gespeichert werden

EXT: (fast) Alle Verweise werden in einem Block gespeichert, welcher nach einem speziellen Indizierungsverahren arbeitet (Stichwort: direkt0...9, einfach-, zweifach-, dreifach indiziert)
Dieser Haupt-Indexknoten speichert also nur Verweise auf (9) Datenblöcke und weitere Blöcke, welche auch nur Verweise auf weitere Blöcke speichern. 


3. 
Echte Dateien: 
Nicht ausführbare Dateien: Dateien, welche direkte informationen speichern (z.B. png, txt, ... Dateien)
Ausführbare Dateien: Dateien, welche Anweisungen für den Computer enthalten (z.B. Kompilierte C Dateien) (z.B. in Windows: exe-Dateien)
Grauzone: z.B. Python source code Dateien (sind nicht direkt anweisungen für den Computer aber werden interpretiert)

Unechte Dateien: (Pseudodateien)
Gerätdatei: Eine Darstellung einer Hardwarekompontene (z.B. Festplatte) als Datei
procfs-Datei: Speichert bestimmte Zustände
Kommunikationskanal: z.B. Pipes, etc. zur Kommunikation zwischen Prozessen
Verzeichnisse: "Verzeigung" im Dateisystem
Sockets: wie pipes zur Kommunikation zwischen Prozessen
Symlinks: Softlink, sihe 4.
ANMERKUNG: Für die Klausur müsst ihr die regulären Dateien nicht weiter unterteilen, "Reguläre Dateien" reicht.

4. 
Ein Softlink ist nur ein Verweis auf den Speicherort der Datei/des Verzeichnisses, während ein Hardlink ein direkter Verweis auf die Datei darstellt.
Wenn also eine Datei gelöscht wird, auf die ein Softlink verweist, führt der Softlink auch nicht mehr zu dieser Datei. 
Wenn allerdings eine Datei gelöscht wird auf die ein Hardlink zeigt, kann über den Hardlink weiterhin auf diese Datei zugegriffen werden (Datei wird erst gelöscht, wenn kein Hardlink mehr auf sie verweist).

Anwendungsfall Hardlink: Eine Datei soll von Ordnern aus nutzbar sein, soll aber erst endgültig gelöscht werden, wenn sie in jedem dieser Verzeichnisse gelöscht wurde
Anwendungsfall Softlink: Ein Verzeichniss soll von mehreren Orten aus leicht erreichbar sein (man möchte z.B. einen Verweis auf einen Bestimmten Ordner auf dem Desktop haben)


5.
Block: 512 Byte
40 Bit Blocknummer
8 Direkte Verweise
1 x einmal indirekt
1 x zweimal indirekt

8 * 512 + floor((512 * 8)/40) * 512 + floor((8 * 512)/40) * floor((8 * 512)/40) * 512 = 5383168 Byte


6.
/dev/: (für "Device") enthät alle Gerätdateien
/usr/: (für "user" oder "User System Resources") enthält ausführbare Dateien, deren Dokumentation, Bibliotheken, etc. 
/proc/: (für "processes") enthält alle procfs Dateien. Also alle zur laufzeit wichtigen Informationen für das BS
/home/: (für "home-directory") hier können Nutzer ihre Dateien speichern (jeder Nutzer hat hier ein eigenes Unterverzeichnis) (hier haben nutzer volle Schreibe- und Leserechte)
/etc/: enthält alle Systemkonfigurationsdateien. Diese können durch gleichnamige Konfigurationsdateien im Homeverzeichnis überlagert werden.
/bin/: (für "binaries") enthält die Shell und Kommandos wie cd, ls, cat, ... (die Dateien/Binaries in diese Verzeichnis sind essentiell) (Können von allen Nutzern benutzt werden)
/sbin/: enthält Programme für die Systemwartung / Systemadministration (hier sind sachen wie shutdown, reboot, ...) (können auch von Benutzern mit Superuserrechten genutzt werden)

7. 
mkdir b
mkdir b/d
touch b/gbs.pdf
mkdir c
mkdir a
ln b/gbs.pdf a/gbs.pdf
ln -s ../a/gbs.pdf c/gbs.pdf

8.
ANMERKUNG: Orientiert euch bitte an dem Beispiel in 7., und zeichnet die `..` Einträge ebenfalls ein. `.` könnt ihr euch aber sparen. Dateien könnt ihr eckig machen.

PUNKTE: 5.75